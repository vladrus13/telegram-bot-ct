name: Build And Push Image

on:
  push:
    branches: [ "master" ]

jobs:

  build-and-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Test and build JAR
        run: |
          cd telegram-bot-itmo
          ./gradlew build check jar --console=plain --no-daemon
      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: jar
          path: telegram-bot-itmo/build/libs/runBot.jar
      - name: Upload Dockerfile
        uses: actions/upload-artifact@v4
        with:
          name: dockerfile
          path: telegram-bot-itmo/dockerfiles/Dockerfile
  
  
  push:
    runs-on: ubuntu-latest
    needs: build-and-check
    steps:
      - name: Download jar
        uses: actions/download-artifact@v4
        with:
          name: jar
          path: .
      - name: Download Dockerfile
        uses: actions/download-artifact@v4
        with:
          name: dockerfile
          path: .
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}

          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . --file Dockerfile
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
